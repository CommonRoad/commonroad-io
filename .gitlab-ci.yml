image: python

stages:
- style_check
- style_check_merge_result
- test
- deploy

before_script:
- curl -O https://bootstrap.pypa.io/get-pip.py
- python get-pip.py
- apt-get update -qq && apt-get install -y -qq ffmpeg

.install-and-run: &install-and-run
    - pip install tox coverage
    - pip install -r ./requirements.txt
    - pip install -e .[tests]
    - coverage run tests/run_tests.py
    - coverage report -m || true

style_checks:
  stage: style_check
  script:
    - pip install pycodestyle
    - git  diff ${CI_COMMIT_BEFORE_SHA}...${CI_COMMIT_SHA} -- '*.py' | pycodestyle --max-line-length=120 --diff --exclude=./commonroad/scenario_definition/*
  except:
  - merge_requests
  allow_failure: true

style_check_merge_result:
  stage: style_check
  script:
    - pip install pycodestyle
    - git  diff ${CI_MERGE_REQUEST_TARGET_BRANCH_SHA}...${CI_MERGE_REQUEST_SOURCE_BRANCH_SHA} -- '*.py' | pycodestyle --max-line-length=120 --diff --exclude=./commonroad/scenario_definition/*
  only:
  - merge_requests

build_and_test_python_3_7:
  image: python:3.7
  stage: test
  script:
    - *install-and-run

build_and_test_python_3_8:
  image: python:3.8
  stage: test
  script:
    - *install-and-run

build_and_test_python_3_9:
  image: python:3.9
  stage: test
  script:
    - *install-and-run

build_and_test_python_3_10:
  image: python:3.10
  stage: test
  script:
    - *install-and-run

build_doc:
  image: python:3.10
  stage: test
  script:
    - pip install -r ./doc/requirements_doc.txt
    - cd doc && make html
  artifacts :
    paths :
      - ./doc/build/
    expose_as : 'Documentation'

validate_tutorials:
  image: python:3.10
  stage: test
  script:
    - pip install -r ./requirements.txt
    - pip install -e .[tests]
    - pip install cvxpy
    - pip install jupyter
    - pip install pytest
    - pip install nbval
    - pytest --nbval-lax ./tutorials/

push_to_internal_pipy_registry:
  # push the development version to the internal pipy registry https://gitlab.lrz.de/cps/commonroad-io/-/packages
  # before manually triggering the job, delete the previous package in case the version number didn't change
  stage: deploy
  when: manual
  only:
    - develop
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --skip-existing --repository-url https://gitlab.lrz.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*

#push_to_external_test_pipy_registry:
#  stage: deploy
#  when: manual
#  only:
#    - master
#  variables :
#    TWINE_REPOSITORY_URL : "https://test.pypi.org/legacy/"
#    TWINE_USERNAME : __token__
#  script:
#    - pip install twine
#    - python setup.py sdist bdist_wheel
#    - twine check dist/*
#    - twine upload -p $TWINE_PASSWORD_TEST $CI_PROJECT_DIR/dist/*

