syntax = "proto2";

package commonroad_map;

import "util.proto";

message LineMarkingEnum {
    enum LineMarking {
        DASHED = 0;
        SOLID = 1;
        BROAD_DASHED = 2;
        BROAD_SOLID = 3;
        UNKNOWN = 4;
        NO_MARKING = 5;
    }
}

message LaneletTypeEnum {
    enum LaneletType {
        URBAN = 0;
        COUNTRY = 1;
        HIGHWAY = 2;
        DRIVE_WAY = 3;
        MAIN_CARRIAGE_WAY = 4;
        ACCESS_RAMP = 5;
        EXIT_RAMP = 6;
        SHOULDER = 7;
        BUS_LANE = 8;
        BUS_STOP = 9;
        BICYCLE_LANE = 10;
        SIDEWALK = 11;
        CROSSWALK = 12;
        INTERSTATE = 13;
        INTERSECTION = 14;
        BORDER = 15;
        PARKING = 16;
        RESTRICTED = 17;
        UNKNOWN = 18;
    }
}

message RoadUserEnum {
    enum RoadUser {
        VEHICLE = 0;
        CAR = 1;
        TRUCK = 2;
        BUS = 3;
        PRIORITY_VEHICLE = 4;
        MOTORCYCLE = 5;
        BICYCLE = 6;
        PEDESTRIAN = 7;
        TRAIN = 8;
        TAXI = 9;
    }
}

message Bound {
    required int32 boundary_id = 1;
    repeated commonroad_common.Point points = 2;
}

message StopLine {
    required uint32 stop_line_id = 1;
    required commonroad_common.Point start_point = 2;
    required commonroad_common.Point end_point = 3;
    required LineMarkingEnum.LineMarking line_marking = 4;
}

message Lanelet {
    required uint32 lanelet_id = 1;
    required int32 left_bound = 2;
    required int32 right_bound = 3;
    optional bool left_bound_reverse = 4;
    optional bool right_bound_reverse = 5;
    optional uint32 left_bound_line_marking = 6;
    optional uint32 right_bound_line_marking = 7;
    repeated uint32 predecessors = 8;
    repeated uint32 successors = 9;
    optional uint32 adjacent_left = 10;
    optional uint32 adjacent_right = 11;
    optional bool adjacent_left_opposite_dir = 12;
    optional bool adjacent_right_opposite_dir = 13;
    optional uint32 stop_line = 14;
    repeated LaneletTypeEnum.LaneletType lanelet_types = 15;
    repeated RoadUserEnum.RoadUser user_one_way = 16;
    repeated RoadUserEnum.RoadUser user_bidirectional = 17;
    repeated uint32 traffic_sign_refs = 18;
    repeated uint32 traffic_light_refs = 19;
    repeated uint32 adjacent_areas = 20;
}
